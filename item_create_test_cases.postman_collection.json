{
	"info": {
		"_postman_id": "79a96d1c-d07e-4495-8919-442b12891548",
		"name": "item_create_test_cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1734377"
	},
	"item": [
		{
			"name": "1. list_all_items_intial_200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"total_items_count\", Object.keys(pm.response.json()).length);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{port}}/api/todoItems",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"todoItems"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. create_item_201",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"var myUUID = uuid.v4();",
							"postman.setEnvironmentVariable(\"description\", \"Item added via postman \" + myUUID);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.environment.set(\"item_uuid\", pm.response.json())",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"{{description}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{port}}/api/todoItems",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"todoItems"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. get_item_by_uuid_200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"        pm.expect(pm.response.json().description).to.eq(pm.environment.get(\"description\"));",
							"    });",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"{{description}}\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{port}}/api/todoItems/{{item_uuid}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"todoItems",
						"{{item_uuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. create_item_409",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.json()).to.include(\"A todo item with description already exists\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"{{description}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{port}}/api/todoItems",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"todoItems"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. create_item_400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Description cannot be blank\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.Description[0]).to.eql(\"Description field can not be empty\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{port}}/api/todoItems",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"todoItems"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. get_item_by_uuid_404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Transfer-Encoding",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3002/api/todoItems/2ade20d3-1452-4e39-8df2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"todoItems",
						"2ade20d3-1452-4e39-8df2"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. list_all_items_final_200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"});",
							"",
							"pm.test(\"Assert correct items returned\", function () {",
							"    pm.expect(Object.keys(pm.response.json()).length).to.eql(pm.environment.get(\"total_items_count\") + 1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{ip}}:{{port}}/api/todoItems",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"todoItems"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "description",
			"value": "",
			"type": "string"
		},
		{
			"key": "item_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "total_items_count",
			"value": "",
			"type": "string"
		}
	]
}